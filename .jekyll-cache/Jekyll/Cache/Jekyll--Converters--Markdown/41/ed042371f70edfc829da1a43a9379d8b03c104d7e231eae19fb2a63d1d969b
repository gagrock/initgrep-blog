I"ãy<p>Before we understand the role of <code class="highlighter-rouge">compile</code> and <code class="highlighter-rouge">link</code> function in a directive. Let me list down the sequence of steps followed by AngularJs <code class="highlighter-rouge">$compiler</code> service to compile the directives.</p>

<ol>
  <li><code class="highlighter-rouge">$compile</code> service traverses the DOM nodes and finds the elements which match a directive. A single element can match multiple directives. All the matched directives are added to a list.</li>
  <li>Sorting happens on the basis of directive <code class="highlighter-rouge">priority</code>. After that, each directiveâ€™s <code class="highlighter-rouge">compile</code> functions are executed and each element is compiled.</li>
  <li>Each compile function returns a <code class="highlighter-rouge">link</code> function. Since all the directives are compiled, a combined linking function is created which invokes each listed directiveâ€™s link functions. A compile function is called only once.</li>
  <li>The <code class="highlighter-rouge">link</code> function of each directive is executed. During the execution of the link function, the scope is attached with the templates and  <code class="highlighter-rouge">$watches</code> are registered on scope and listeners on DOM elements.</li>
</ol>

<div class="language-js highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">var</span> <span class="nx">$compile</span> <span class="o">=</span> <span class="p">...;</span> <span class="c1">// injected into your code</span>
<span class="kd">var</span> <span class="nx">scope</span> <span class="o">=</span> <span class="p">...;</span>
<span class="kd">var</span> <span class="nx">parent</span> <span class="o">=</span> <span class="p">...;</span> <span class="c1">// DOM element where the compiled template can be appended</span>

<span class="kd">var</span> <span class="nx">html</span> <span class="o">=</span> <span class="dl">'</span><span class="s1">&lt;div ng-bind="exp"&gt;&lt;/div&gt;</span><span class="dl">'</span><span class="p">;</span>

<span class="c1">// Step 1: parse HTML template into DOM element</span>
<span class="kd">var</span> <span class="nx">template</span> <span class="o">=</span> <span class="nx">angular</span><span class="p">.</span><span class="nx">element</span><span class="p">(</span><span class="nx">html</span><span class="p">);</span>

<span class="c1">// Step 2: compile the template</span>
<span class="kd">var</span> <span class="nx">linkFn</span> <span class="o">=</span> <span class="nx">$compile</span><span class="p">(</span><span class="nx">template</span><span class="p">);</span>

<span class="c1">// Step 3: link the compiled template with the scope.</span>
<span class="kd">var</span> <span class="nx">element</span> <span class="o">=</span> <span class="nx">linkFn</span><span class="p">(</span><span class="nx">scope</span><span class="p">);</span>

<span class="c1">// Step 4: Append to DOM (optional)</span>
<span class="nx">parent</span><span class="p">.</span><span class="nx">appendChild</span><span class="p">(</span><span class="nx">element</span><span class="p">);</span>
</code></pre></div></div>

<p><strong><em>The above code is the exact copy of <a href="https://docs.angularjs.org/guide/compiler#how-directives-are-compiled">AngularJS compile docs</a></em></strong></p>

<p>Compile function does the one-time activity and could be used to do some initialization. Link function is used to perform DOM manipulation and copy content into the DOM from the scope. Child elements that contain <code class="highlighter-rouge">templateUrl</code> directives will not have been compiled and linked since they are waiting for their template to load asynchronously. Their own compilation and linking are suspended until that occurs.</p>
<blockquote>
  <p><strong>RULE OF THUMB:</strong> 
If there is a one-time activity common to all instances of the directive. It should be moved to compile function.</p>
</blockquote>

<p>I hope it was clear enoughâ€¦
Letâ€™s go through the compile and link APIâ€™s.</p>

<h5 id="compile-function">Compile function:</h5>
<div class="language-js highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">function</span> <span class="nx">compile</span><span class="p">(</span><span class="nx">element</span><span class="p">,</span> <span class="nx">attributes</span><span class="p">,</span> <span class="nx">transclude</span><span class="p">)</span> <span class="p">{</span> <span class="p">...</span> <span class="p">}</span>
</code></pre></div></div>
<ol>
  <li><strong>element</strong>: The element where the directive has been declared. DOM transformations can be applied to this element or its children.</li>
  <li><strong>attributes</strong>:  attributes declared on the directive element</li>
  <li><strong>transclude</strong>: A transclude linking function. This option is <em>deprecated</em>.</li>
</ol>

<p>The compile function can have a return type which could be either an object or a function.</p>
<ol>
  <li><strong>function</strong>:  This can be used when a link function is returned. This is specifically a <code class="highlighter-rouge">post-link</code> function.
    <div class="language-js highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nx">directive</span><span class="p">(</span><span class="dl">"</span><span class="s2">dumyCompile</span><span class="dl">"</span><span class="p">,</span><span class="kd">function</span><span class="p">(){</span>
  <span class="k">return</span> <span class="p">{</span>
  <span class="na">compile</span><span class="p">:</span> <span class="kd">function</span><span class="p">(</span><span class="nx">element</span><span class="p">,</span> <span class="nx">attributes</span><span class="p">,</span> <span class="nx">transclude</span><span class="p">){</span>
    <span class="k">return</span> <span class="kd">function</span><span class="p">(</span><span class="nx">scope</span><span class="p">,</span> <span class="nx">element</span><span class="p">,</span> <span class="nx">attrs</span><span class="p">,</span> <span class="nx">controller</span><span class="p">,</span> <span class="nx">transcludeFn</span><span class="p">){</span>
        <span class="c1">// this function is a post link function.</span>
         <span class="c1">// Dom manipulation and adding listeners to DOM element can be done here.</span>
     <span class="p">}</span>
 <span class="p">}</span>
  <span class="p">}</span>
<span class="p">})</span>
</code></pre></div>    </div>
  </li>
  <li><strong>object</strong>: when both <code class="highlighter-rouge">pre-link</code> or <code class="highlighter-rouge">post-link</code>  functions or both are returned. options <code class="highlighter-rouge">pre</code> and <code class="highlighter-rouge">post</code> can be used to register the functions respectively. I will explain in later when we start with link function.
    <div class="language-js highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nx">angular</span><span class="p">.</span><span class="nx">directive</span><span class="p">(</span><span class="dl">"</span><span class="s2">dumyCompile</span><span class="dl">"</span><span class="p">,</span><span class="kd">function</span><span class="p">(){</span>
  <span class="k">return</span> <span class="p">{</span>
 <span class="na">compile</span><span class="p">:</span> <span class="kd">function</span><span class="p">(</span><span class="nx">element</span><span class="p">,</span> <span class="nx">attributes</span><span class="p">,</span> <span class="nx">transclude</span><span class="p">){</span>
   <span class="c1">// adding the font size to the element</span>
    <span class="k">return</span> <span class="p">{</span>
       <span class="na">pre</span><span class="p">:</span> <span class="kd">function</span><span class="p">(</span><span class="nx">scope</span><span class="p">,</span> <span class="nx">element</span><span class="p">,</span> <span class="nx">attrs</span><span class="p">,</span> <span class="nx">controller</span><span class="p">,</span> <span class="nx">transcludeFn</span><span class="p">){</span>
             <span class="c1">//  this function is a pre link function.</span>
             <span class="c1">// Dom manipulation and adding listeners to DOM element </span>
             <span class="c1">//CAN NOT be done here. </span>
           <span class="p">},</span>
       <span class="na">post</span><span class="p">:</span> <span class="kd">function</span><span class="p">(</span><span class="nx">scope</span><span class="p">,</span> <span class="nx">element</span><span class="p">,</span> <span class="nx">attrs</span><span class="p">,</span> <span class="nx">controller</span><span class="p">,</span> <span class="nx">transcludeFn</span><span class="p">){</span>
             <span class="c1">//  this function is a post link function.</span>
             <span class="c1">// Dom manipulation and adding listeners to DOM element</span>
             <span class="c1">// can be done here.</span>
         <span class="p">}</span>
    <span class="p">}</span> 
 <span class="p">}</span>
  <span class="p">}</span>
<span class="p">})</span>
</code></pre></div>    </div>
    <blockquote>
      <p>while creating a directive using directive registering API, You can either return a <code class="highlighter-rouge">Directive Definition Object</code> that defines the directive properties, or just the <code class="highlighter-rouge">postLink function</code>. Rest of the options will have default values. You can check <a href="/posts/javascript/angularjs/Angularjs-api-to-register-directives-directive-definition-object">API for registering directives</a> to learn how to create and register a directive.</p>

    </blockquote>
  </li>
</ol>

<h5 id="link-function">Link function</h5>
<div class="language-js highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">function</span> <span class="nx">link</span><span class="p">(</span><span class="nx">scope</span><span class="p">,</span> <span class="nx">element</span><span class="p">,</span> <span class="nx">attributes</span><span class="p">,</span> <span class="nx">controller</span><span class="p">,</span> <span class="nx">transcludeFn</span><span class="p">)</span> <span class="p">{</span> <span class="p">...</span> <span class="p">}</span>
</code></pre></div></div>
<p>Link functions is responsible for registering Listeners on DOM. It can also manipulate DOM such as update the element. It executes after the <code class="highlighter-rouge">compile</code> function. 
Below are the parameter definitions:</p>
<ol>
  <li><strong>scope</strong> : The scope to be used by the directive for registering watches.</li>
  <li><strong>element</strong>: The element where the directive has been declared. DOM transformations can be applied to this element or its children.</li>
  <li><strong>attributes</strong> : Normalized list of attributes declared on this element shared between all directive linking functions.</li>
  <li><strong>Controller</strong>:  The value of the controller depends on the <code class="highlighter-rouge">require</code> property. It can either be a <code class="highlighter-rouge">string or array</code> which means a controller instance or array of instances respectively. If the <code class="highlighter-rouge">require</code> is not defined, the controller of the directive is used.
If it does not have one, controller instance would be undefined.</li>
  <li><strong>transcludeFn</strong> :A transclude linking function pre-bound to the correct transclusion scope.</li>
</ol>

<div class="language-js highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">.</span><span class="nx">directive</span><span class="p">(</span><span class="dl">"</span><span class="s2">domManipulatorWithLink</span><span class="dl">"</span><span class="p">,</span><span class="kd">function</span><span class="p">(){</span>
    <span class="cm">/**
    *Object name can be omitted alltogether.
    *I have added it here for representation
    **/</span>
   <span class="k">return</span> <span class="nx">directiveDefinitionObject</span><span class="p">{</span>
    <span class="nl">restrict</span> <span class="p">:</span> <span class="dl">'</span><span class="s1">E</span><span class="dl">'</span><span class="p">,</span>
    <span class="nx">template</span><span class="p">:</span> <span class="dl">"</span><span class="s2">&lt;span&gt;name&lt;/span&gt;</span><span class="dl">"</span><span class="p">,</span>
    <span class="nx">link</span> <span class="p">:</span> <span class="kd">function</span> <span class="p">(</span><span class="nx">scope</span><span class="p">,</span> <span class="nx">element</span><span class="p">,</span> <span class="nx">attrs</span><span class="p">,</span> <span class="nx">controller</span><span class="p">,</span> <span class="nx">transcludeFn</span><span class="p">)</span> <span class="p">{</span> 
            <span class="c1">// changed the style of the element</span>
            <span class="nx">element</span><span class="p">.</span><span class="nx">css</span><span class="p">(</span><span class="dl">"</span><span class="s2">color</span><span class="dl">"</span><span class="p">,</span> <span class="dl">'</span><span class="s1">red</span><span class="dl">'</span><span class="p">);</span>
            <span class="c1">// added a listener to the DOM element</span>
            <span class="nx">element</span><span class="p">.</span><span class="nx">on</span><span class="p">(</span><span class="dl">'</span><span class="s1">mouseover</span><span class="dl">'</span><span class="p">,(</span><span class="nx">e</span><span class="p">)</span><span class="o">=&gt;</span><span class="p">{</span>
                <span class="nx">element</span><span class="p">.</span><span class="nx">css</span><span class="p">(</span><span class="dl">"</span><span class="s2">background-color</span><span class="dl">"</span><span class="p">,</span><span class="dl">"</span><span class="s2">blue</span><span class="dl">"</span><span class="p">);</span>
           <span class="p">});</span>
      <span class="p">}</span>
<span class="p">})</span>
</code></pre></div></div>
<p>The link function has two types. <code class="highlighter-rouge">Pre-link</code> and <code class="highlighter-rouge">Post-link</code>. The post-link function is the commonly used while the Pre-link function is rarely used. I have added a below  difference between the two types:</p>

<table>
  <thead>
    <tr>
      <th>Pre-link</th>
      <th>post-link</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>Executed before the child elements are linked</td>
      <td>Executed after the child elements are linked.</td>
    </tr>
    <tr>
      <td>Not safe to do DOM transformation since the compiler linking function will fail to locate the correct elements for linking.</td>
      <td>Safe to do DOM transformation in the post-linking function on elements that are not waiting for their async templates to be resolved.</td>
    </tr>
  </tbody>
</table>

<p><strong>Check out the complete code example below</strong></p>
<div class="language-js highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">//app.js</span>
<span class="k">import</span> <span class="nx">angular</span> <span class="k">from</span> <span class="dl">'</span><span class="s1">angular</span><span class="dl">'</span><span class="p">;</span>

<span class="nx">angular</span><span class="p">.</span><span class="nx">module</span><span class="p">(</span><span class="dl">'</span><span class="s1">app</span><span class="dl">'</span><span class="p">,</span> <span class="p">[])</span>
<span class="p">.</span><span class="nx">controller</span><span class="p">(</span><span class="dl">"</span><span class="s2">appCtrl1</span><span class="dl">"</span><span class="p">,[</span><span class="dl">"</span><span class="s2">$scope</span><span class="dl">"</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">$scope</span><span class="p">){</span>
    <span class="nx">$scope</span><span class="p">.</span><span class="nx">name</span> <span class="o">=</span> <span class="dl">"</span><span class="s2">Irshad</span><span class="dl">"</span><span class="p">,</span>
    <span class="nx">$scope</span><span class="p">.</span><span class="nx">company</span> <span class="o">=</span> <span class="dl">"</span><span class="s2">initgrep inc</span><span class="dl">"</span>
    <span class="nx">$scope</span><span class="p">.</span><span class="nx">url</span> <span class="o">=</span> <span class="dl">"</span><span class="s2">www.initgrep.com</span><span class="dl">"</span>
<span class="p">}])</span>
<span class="p">.</span><span class="nx">directive</span><span class="p">(</span><span class="dl">"</span><span class="s2">userInfo</span><span class="dl">"</span><span class="p">,</span><span class="kd">function</span><span class="p">(){</span>
  <span class="kd">var</span> <span class="nx">userInfoDefinitionObject</span> <span class="o">=</span><span class="p">{</span>
    <span class="na">template</span> <span class="p">:</span> <span class="dl">"</span><span class="s2">&lt;div&gt; &lt;b&gt;Name:&lt;/b&gt;&lt;br/&gt;&lt;b&gt;Organisation:&lt;/b&gt;&lt;br/&gt; &lt;b&gt;website:&lt;/b&gt;&lt;/div&gt;</span><span class="dl">"</span><span class="p">,</span>
  <span class="p">}</span>
  <span class="k">return</span> <span class="nx">userInfoDefinitionObject</span><span class="p">;</span>
<span class="p">})</span>
<span class="p">.</span><span class="nx">directive</span><span class="p">(</span><span class="dl">"</span><span class="s2">domManipulatorUsingLink</span><span class="dl">"</span><span class="p">,</span><span class="kd">function</span><span class="p">(){</span>

  <span class="k">return</span> <span class="p">{</span>
    <span class="na">restrict</span> <span class="p">:</span> <span class="dl">'</span><span class="s1">E</span><span class="dl">'</span><span class="p">,</span>
    <span class="na">template</span><span class="p">:</span> <span class="dl">"</span><span class="s2">&lt;span&gt;name&lt;/span&gt;</span><span class="dl">"</span><span class="p">,</span>
    <span class="na">link</span> <span class="p">:</span> <span class="kd">function</span>  <span class="p">(</span><span class="nx">scope</span><span class="p">,</span> <span class="nx">element</span><span class="p">,</span> <span class="nx">attrs</span><span class="p">,</span> <span class="nx">controller</span><span class="p">,</span> <span class="nx">transcludeFn</span><span class="p">)</span> <span class="p">{</span> 
    <span class="c1">// modify dom style</span>
    <span class="nx">element</span><span class="p">.</span><span class="nx">css</span><span class="p">(</span><span class="dl">"</span><span class="s2">color</span><span class="dl">"</span><span class="p">,</span> <span class="dl">'</span><span class="s1">red</span><span class="dl">'</span><span class="p">);</span>
    <span class="c1">//add listeners to dom</span>
    <span class="nx">element</span><span class="p">.</span><span class="nx">on</span><span class="p">(</span><span class="dl">'</span><span class="s1">mouseover</span><span class="dl">'</span><span class="p">,(</span><span class="nx">e</span><span class="p">)</span><span class="o">=&gt;</span><span class="p">{</span>
      <span class="nx">element</span><span class="p">.</span><span class="nx">css</span><span class="p">(</span><span class="dl">"</span><span class="s2">background-color</span><span class="dl">"</span><span class="p">,</span><span class="dl">"</span><span class="s2">blue</span><span class="dl">"</span><span class="p">);</span>
    <span class="p">});</span>
    <span class="nx">element</span><span class="p">.</span><span class="nx">on</span><span class="p">(</span><span class="dl">'</span><span class="s1">mouseout</span><span class="dl">'</span><span class="p">,(</span><span class="nx">e</span><span class="p">)</span><span class="o">=&gt;</span><span class="p">{</span>
      <span class="nx">element</span><span class="p">.</span><span class="nx">css</span><span class="p">(</span><span class="dl">"</span><span class="s2">background-color</span><span class="dl">"</span><span class="p">,</span><span class="dl">"</span><span class="s2">transparent</span><span class="dl">"</span><span class="p">);</span>
    <span class="p">});</span>
    
   <span class="p">}</span>
  <span class="p">}</span>

<span class="p">})</span>

<span class="p">.</span><span class="nx">directive</span><span class="p">(</span><span class="dl">"</span><span class="s2">domManipulatorUsingCompile</span><span class="dl">"</span><span class="p">,</span><span class="kd">function</span><span class="p">(){</span>
  <span class="kd">function</span> <span class="nx">compileFn</span><span class="p">(</span><span class="nx">element</span><span class="p">,</span> <span class="nx">attributes</span><span class="p">,</span> <span class="nx">transclude</span><span class="p">)</span> <span class="p">{</span> 
      <span class="nx">element</span><span class="p">.</span><span class="nx">css</span><span class="p">(</span><span class="dl">'</span><span class="s1">font-size</span><span class="dl">'</span><span class="p">,</span><span class="dl">"</span><span class="s2">2rem</span><span class="dl">"</span><span class="p">);</span>

      <span class="k">return</span> <span class="p">(</span>
        <span class="kd">function</span>  <span class="nx">linkFn</span><span class="p">(</span><span class="nx">scope</span><span class="p">,</span> <span class="nx">element</span><span class="p">,</span> <span class="nx">attrs</span><span class="p">,</span> <span class="nx">controller</span><span class="p">,</span> <span class="nx">transcludeFn</span><span class="p">)</span> <span class="p">{</span> 
    <span class="nx">element</span><span class="p">.</span><span class="nx">css</span><span class="p">(</span><span class="dl">"</span><span class="s2">color</span><span class="dl">"</span><span class="p">,</span> <span class="dl">'</span><span class="s1">red</span><span class="dl">'</span><span class="p">);</span>
    <span class="nx">element</span><span class="p">.</span><span class="nx">on</span><span class="p">(</span><span class="dl">'</span><span class="s1">mouseover</span><span class="dl">'</span><span class="p">,(</span><span class="nx">e</span><span class="p">)</span><span class="o">=&gt;</span><span class="p">{</span>
      <span class="nx">element</span><span class="p">.</span><span class="nx">css</span><span class="p">(</span><span class="dl">"</span><span class="s2">background-color</span><span class="dl">"</span><span class="p">,</span><span class="dl">"</span><span class="s2">blue</span><span class="dl">"</span><span class="p">);</span>
    <span class="p">});</span>
    <span class="nx">element</span><span class="p">.</span><span class="nx">on</span><span class="p">(</span><span class="dl">'</span><span class="s1">mouseout</span><span class="dl">'</span><span class="p">,(</span><span class="nx">e</span><span class="p">)</span><span class="o">=&gt;</span><span class="p">{</span>
      <span class="nx">element</span><span class="p">.</span><span class="nx">css</span><span class="p">(</span><span class="dl">"</span><span class="s2">background-color</span><span class="dl">"</span><span class="p">,</span><span class="dl">"</span><span class="s2">transparent</span><span class="dl">"</span><span class="p">);</span>
    <span class="p">});</span>
    
   <span class="p">}</span>
      <span class="p">);</span>
  <span class="p">}</span>
  <span class="k">return</span> <span class="p">{</span>
    <span class="na">restrict</span> <span class="p">:</span> <span class="dl">'</span><span class="s1">E</span><span class="dl">'</span><span class="p">,</span>
    <span class="na">template</span><span class="p">:</span> <span class="dl">"</span><span class="s2">&lt;span&gt;name&lt;/span&gt;</span><span class="dl">"</span><span class="p">,</span>
    <span class="na">compile</span><span class="p">:</span> <span class="nx">compileFn</span>
  <span class="p">}</span>

<span class="p">})</span>
<span class="p">.</span><span class="nx">directive</span><span class="p">(</span><span class="dl">"</span><span class="s2">dumyCompile</span><span class="dl">"</span><span class="p">,</span><span class="kd">function</span><span class="p">(){</span>
  <span class="k">return</span> <span class="p">{</span>
    <span class="na">restrict</span><span class="p">:</span> <span class="dl">'</span><span class="s1">E</span><span class="dl">'</span><span class="p">,</span>
     <span class="na">template</span><span class="p">:</span> <span class="dl">"</span><span class="s2">&lt;span&gt;name&lt;/span&gt;</span><span class="dl">"</span><span class="p">,</span>
    <span class="na">compile</span><span class="p">:</span> <span class="kd">function</span><span class="p">(</span><span class="nx">element</span><span class="p">,</span> <span class="nx">attributes</span><span class="p">,</span> <span class="nx">transclude</span><span class="p">){</span>
      <span class="c1">// adding the font size to the element</span>
       <span class="nx">element</span><span class="p">.</span><span class="nx">css</span><span class="p">(</span><span class="dl">'</span><span class="s1">font-size</span><span class="dl">'</span><span class="p">,</span><span class="dl">"</span><span class="s2">2rem</span><span class="dl">"</span><span class="p">);</span>
       <span class="k">return</span> <span class="kd">function</span><span class="p">(</span><span class="nx">scope</span><span class="p">,</span> <span class="nx">element</span><span class="p">,</span> <span class="nx">attrs</span><span class="p">,</span> <span class="nx">controller</span><span class="p">,</span> <span class="nx">transcludeFn</span><span class="p">){</span>
         <span class="cm">/**
          * this function is a post link function.
          * Dom manipulation and adding listeners to DOM element can be done here.
          */</span>
       <span class="p">}</span>

    <span class="p">}</span>
  <span class="p">}</span>
<span class="p">})</span>
<span class="p">.</span><span class="nx">directive</span><span class="p">(</span><span class="dl">"</span><span class="s2">dumyCompile</span><span class="dl">"</span><span class="p">,</span><span class="kd">function</span><span class="p">(){</span>
  <span class="k">return</span> <span class="p">{</span>
    <span class="na">restrict</span><span class="p">:</span> <span class="dl">'</span><span class="s1">E</span><span class="dl">'</span><span class="p">,</span>
     <span class="na">template</span><span class="p">:</span> <span class="dl">"</span><span class="s2">&lt;span&gt;name&lt;/span&gt;</span><span class="dl">"</span><span class="p">,</span>
    <span class="na">compile</span><span class="p">:</span> <span class="kd">function</span><span class="p">(</span><span class="nx">element</span><span class="p">,</span> <span class="nx">attributes</span><span class="p">,</span> <span class="nx">transclude</span><span class="p">){</span>
      <span class="c1">// adding the font size to the element</span>
       <span class="k">return</span> <span class="p">{</span>
          <span class="na">pre</span><span class="p">:</span> <span class="kd">function</span><span class="p">(</span><span class="nx">scope</span><span class="p">,</span> <span class="nx">element</span><span class="p">,</span> <span class="nx">attrs</span><span class="p">,</span> <span class="nx">controller</span><span class="p">,</span> <span class="nx">transcludeFn</span><span class="p">){</span>
                <span class="c1">//  this function is a pre link function.</span>
                <span class="c1">// Dom manipulation and adding listeners to DOM element </span>
                <span class="c1">//CAN NOT be done here. </span>
              <span class="p">},</span>
          <span class="na">post</span><span class="p">:</span> <span class="kd">function</span><span class="p">(</span><span class="nx">scope</span><span class="p">,</span> <span class="nx">element</span><span class="p">,</span> <span class="nx">attrs</span><span class="p">,</span> <span class="nx">controller</span><span class="p">,</span> <span class="nx">transcludeFn</span><span class="p">){</span>
                <span class="c1">//  this function is a post link function.</span>
                <span class="c1">// Dom manipulation and adding listeners to DOM element can be done here.</span>
            <span class="p">}</span>

       <span class="p">}</span> 

    <span class="p">}</span>
  <span class="p">}</span>
<span class="p">})</span>
<span class="p">;</span>
</code></pre></div></div>
<div class="language-html highlighter-rouge"><div class="highlight"><pre class="highlight"><code>
<span class="c">&lt;!--app.html --&gt;</span>
<span class="nt">&lt;div</span> <span class="na">id=</span><span class="s">"app"</span><span class="nt">&gt;</span>
	<span class="nt">&lt;div</span> <span class="na">ng-controller=</span><span class="s">"appCtrl1"</span><span class="nt">&gt;</span>
    <span class="nt">&lt;p&gt;</span> A normal template <span class="nt">&lt;/p&gt;</span>
    <span class="c">&lt;!-- A simple template --&gt;</span>
		<span class="nt">&lt;div&gt;</span> <span class="nt">&lt;b&gt;</span>Name:<span class="nt">&lt;/b&gt;</span>  <span class="nt">&lt;br/&gt;</span> <span class="nt">&lt;b&gt;</span>Organisation:<span class="nt">&lt;/b&gt;</span>  <span class="nt">&lt;br/&gt;</span> <span class="nt">&lt;b&gt;</span>website:<span class="nt">&lt;/b&gt;</span> <span class="nt">&lt;/div&gt;</span>

   
    <span class="c">&lt;!-- directive called as attribute --&gt;</span>
     <span class="nt">&lt;p&gt;</span> using as attribute <span class="nt">&lt;/p&gt;</span>
    <span class="nt">&lt;div</span> <span class="na">user-info</span> <span class="nt">&gt;&lt;/div&gt;</span>

    <span class="c">&lt;!-- directive called as element --&gt;</span>
     <span class="nt">&lt;p&gt;</span> using as element <span class="nt">&lt;/p&gt;</span>
    <span class="nt">&lt;user-info&gt;&lt;/user-info&gt;</span>

    <span class="c">&lt;!-- adding the directive with compile function --&gt;</span>
    <span class="nt">&lt;p&gt;</span> directive with compile function and a link function. Compile function increases the size of element <span class="nt">&lt;/p&gt;</span>
    <span class="nt">&lt;dom-manipulator-using-compile&gt;&lt;/dom-manipulator-using-compile&gt;</span>

    <span class="c">&lt;!-- adding the directive with only link function --&gt;</span>
    <span class="nt">&lt;p&gt;</span> directive with only link function <span class="nt">&lt;/p&gt;</span>
    <span class="nt">&lt;dom-manipulator-using-link&gt;&lt;/dom-manipulator-using-link&gt;</span>

	<span class="nt">&lt;/div&gt;</span>
<span class="nt">&lt;/div&gt;</span>

</code></pre></div></div>

:ET