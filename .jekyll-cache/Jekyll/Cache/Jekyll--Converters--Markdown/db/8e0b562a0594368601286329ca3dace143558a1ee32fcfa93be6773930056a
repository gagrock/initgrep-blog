I"Ú<p>In order to apply AngularJs directives on various elements without having to add them for every DOM element, <code class="highlighter-rouge">multiElement</code> option can be set to <code class="highlighter-rouge">true</code>. On the DOM elements <code class="highlighter-rouge">directive-name-start</code> and <code class="highlighter-rouge">directive-name-end</code> will mark the collection of elements to which the directive should be applied. The HTML compiler collects DOM nodes between nodes with the attributes <code class="highlighter-rouge">directive-name-start</code> and <code class="highlighter-rouge">directive-name-end</code> and groups them together as the directive elements.</p>
<blockquote>
  <p>This feature is recommended <strong>not</strong> be used on directives which are strictly behavioral. i.e. The directives which will add a behavior to the DOM elements such as <code class="highlighter-rouge">ng-click</code></p>
</blockquote>

<blockquote>
  <p>A basic <a href="/posts/javascript/angularjs/Understanding-AngularJS-Directives">understanding of how to create directives</a> is required to understand this tutorial.</p>
</blockquote>

<p>let‚Äôs create a directive which adds an exclamation ‚Äú<code class="highlighter-rouge">!</code>‚Äù at the end of every <code class="highlighter-rouge">paragraph</code>. Let‚Äôs assume, we have multiple paragraphs and we are too lazy to add the directive on each of them. Here is how to do it once for all the elements.</p>

<div class="language-js highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">//app.js</span>
<span class="p">.</span><span class="nx">directive</span><span class="p">(</span><span class="dl">"</span><span class="s2">demoMultiElement</span><span class="dl">"</span><span class="p">,</span> <span class="kd">function</span><span class="p">(){</span>
  <span class="k">return</span> <span class="p">{</span>
    <span class="na">multiElement</span><span class="p">:</span> <span class="kc">true</span><span class="p">,</span>
    <span class="na">link</span><span class="p">:</span> <span class="kd">function</span><span class="p">(</span><span class="nx">scope</span><span class="p">,</span><span class="nx">element</span><span class="p">,</span> <span class="nx">attrs</span><span class="p">,</span> <span class="nx">transcludefn</span><span class="p">){</span>
      <span class="nx">element</span><span class="p">.</span><span class="nx">append</span><span class="p">(</span><span class="s2">`!`</span><span class="p">);</span>
    <span class="p">}</span>
  <span class="p">}</span>
<span class="p">})</span>
</code></pre></div></div>
<p>Inside the directive <code class="highlighter-rouge">demoMultiElement's</code> <a href="/posts/javascript/angularjs/AngularJs-Directive-compile-link-functions">link</a> function, element is appended with exclaimation mark <code class="highlighter-rouge">!</code>. Since this element is collection of nodes on which the directive will be applied, Exclaimation mark should be appended to all the nodes.</p>

<div class="language-html highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c">&lt;!-- index.html--&gt;</span>
<span class="nt">&lt;p</span> <span class="na">demo-multi-element-start</span><span class="nt">&gt;</span> first important sentence<span class="nt">&lt;/p&gt;</span>
<span class="nt">&lt;p&gt;</span>second important sentence<span class="nt">&lt;/p&gt;</span>
<span class="nt">&lt;p</span> <span class="na">demo-multi-element-end</span><span class="nt">&gt;</span>third important sentence<span class="nt">&lt;/p&gt;</span>

</code></pre></div></div>
<p>I have added <code class="highlighter-rouge">demo-multi-element-start</code> and <code class="highlighter-rouge">demo-multi-element-end</code> as above. and the output is like</p>

<div class="language-js highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nx">first</span> <span class="nx">important</span> <span class="nx">sentence</span><span class="o">!</span>
<span class="nx">second</span> <span class="nx">important</span> <span class="nx">sentence</span><span class="o">!</span>
<span class="nx">third</span> <span class="nx">important</span> <span class="nx">sentence</span><span class="o">!</span>
</code></pre></div></div>
:ET